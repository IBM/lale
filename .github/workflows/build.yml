name: Lale

on: [push, pull_request]

jobs:
  static:
    name: static checks / linters
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: pre-commit checks
      uses: pre-commit/action@v2.0.0

  # deps:
  #   name: Install and cache dependencies
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.6]

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Cache pip
  #     uses: actions/cache@v2
  #     with:
  #       path: ${{ env.pythonLocation }}
  #       # Look to see if there is a cache hit for the setup file
  #       key: ${{ runner.os }}-pip-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
  #       restore-keys: |
  #         ${{ runner.os }}-pip-
  #         ${{ runner.os }}-    
  #   - name: Install numpy
  #     run: pip install -U numpy
  #   - name: Install dependencies
  #     run: pip install --upgrade --upgrade-strategy eager .[full,test]

  test_matrix:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-case:
          - test/test_core_classifiers.py
          - test/test_core_regressors.py
          - test/test_lale_lib_versions.py
          - test/test_core_pipeline.py
          - test/test_custom_schemas.py 
          - test/test_json_pretty_viz.py
          - test/test_grammar.py
          - test/test_type_checking.py
          - test/test_interoperability.py
          - test/test_optimizers.py
          - test/test_pipeline.py
          - test/test_autoai_libs.py
          - test/test_aif360.py
          - test/test_autoai_output_consumption.py
          - test/test_autogen_lib.py
        python-version: [3.6]
        setup-target: ['.[full,test]']
        include:
          - test-case: test/test_core_operators.py
            python-version: 3.6
            setup-target: '.[test]'
          - test-case: test/test_autogen_lib.py
            python-version: 3.6
            setup-target: '.[test]'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install system packages
      run: sudo apt-get install graphviz swig
    - name: Cache pip
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ${{ env.pythonLocation }}
        # Look to see if there is a cache hit for the setup file
        key: ${{ runner.os }}-pip-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install numpy
      run: pip install -U numpy
    - name: Install dependencies
      run: pip install --upgrade --upgrade-strategy eager ${{matrix.setup-target}}
    - name: Install deps for test_autoai_output_consumption
      if: ${{ matrix.test-case == 'test/test_autoai_output_consumption.py' }}
      run: pip install 'scikit-learn==0.20.3'
    - name: Install deps for test_lale_lib_versions
      if: ${{ matrix.test-case == 'test/test_lale_lib_versions.py' }}
      run: pip install 'scikit-learn==0.20.3' 'xgboost==0.90'
    - name: Run test
      run: py.test -v --capture=tee-sys --cov-report=xml --cov=lale ${{matrix.test-case}}

  test_snapml:
    name: Test Snap ML
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-case: [test/test_snap_ml.py]
        python-version: [3.6]
        setup-target: ['.[full,test]']
    steps:
    - uses: actions/checkout@v2
    - name: Install system packages
      run: sudo apt-get install graphviz swig
    - name: Cache conda
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if setup.py has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
          hashFiles('setup.py') }}
    - name: Setup anoconda
      uses: conda-incubator/setup-miniconda@v1
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: 'https://public.dhe.ibm.com/ibmdl/export/pub/software/server/ibm-ai/conda/'
        activate-environment: conda-snapml-env
    - name: Install numpy
      shell: bash -l {0}
      run: pip install -U numpy
    - name: Install dependencies
      shell: bash -l {0}
      run: pip install --upgrade --upgrade-strategy eager ${{matrix.setup-target}}
    - name: Install SnapML
      shell: bash -l {0}
      run: |
          $CONDA/bin/conda config --set always_yes yes --set changeps1 no
          export IBM_POWERAI_LICENSE_ACCEPT=yes
          conda install pai4sk
    - name: Run Test
      shell: bash -l {0}
      run: |
          conda install pytest
          py.test -v --capture=tee-sys --cov-report=xml --cov=lale ${{matrix.test-case}}

  test_notebooks:
    name: Test Notebooks
    runs-on: ubuntu-latest
    env: 
      ALL_NOTEBOOK_CATEGORIES: demo_ docs_ talk_
    strategy:
      fail-fast: false
      matrix:
        category:
          - demo_
          - docs_
          - talk_
        python-version: [3.6]
        setup-target: ['.[full,test]']
        test-case: [test/test_notebooks.py]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ${{ env.pythonLocation }}
        # Look to see if there is a cache hit for the setup file
        key: ${{ runner.os }}-pip-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install packages
      run: sudo apt-get install graphviz swig
    - name: Install numpy
      run: pip install -U numpy
    - name: Install dependencies
      run: pip install --upgrade --upgrade-strategy eager ${{matrix.setup-target}}
    - name: Run test
      run: NOTEBOOK_CATEGORY=${{matrix.category}} py.test -v --capture=tee-sys --cov-report=xml --cov=lale ${{matrix.test-case}}
